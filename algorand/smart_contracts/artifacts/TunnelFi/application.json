{
    "hints": {
        "set_collateral(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_collateral(string,string,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "supply(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "borrow(asset,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "repay(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "withdraw()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "receiveMessage(uint64,asset,uint64,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "un_bridge(asset,uint64,application,address,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "liquidate(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "snipe(pay,application,address,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "borrow_of(address)(uint64,uint64,uint64)": {
            "structs": {
                "output": {
                    "name": "Borrow",
                    "elements": [
                        [
                            "principal",
                            "uint64"
                        ],
                        [
                            "collateral",
                            "uint64"
                        ],
                        [
                            "start_at",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "supply_of(address)(uint64,uint64)": {
            "structs": {
                "output": {
                    "name": "Supply",
                    "elements": [
                        [
                            "principal",
                            "uint64"
                        ],
                        [
                            "start_at",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSA1IDQgMTAwMDAwMApieXRlY2Jsb2NrIDB4IDB4NjM2ZjZjNmM2MTc0NjU3MjYxNmMgMHg3NDZmNzQ2MTZjNWY2MjZmNzI3MjZmNzcgMHg3MzZlNjk3MDY1NjE2MjZjNjU1ZjYxNmQ2Zjc1NmU3NCAweDc0NmY3NDYxNmM1ZjczNzU3MDcwNmM3OSAweDcyNjE3NDY1NWY2NDY5NzY2OTY0NjU3MiAweDYyNmY3MjcyNmY3NzY1NjQ1ZjYxNmQ2Zjc1NmU3NCAweDYyNmY3MjcyNmY3NzY1NjQ1ZjczNzQ2MTcyNzQ1ZjYxNzQgMHg3MDc1NjI2YzY5NzM2ODRkNjU3MzczNjE2NzY1IDB4NzM3NTcwNzA2YzY5NjU2NDVmNjE2ZDZmNzU2ZTc0IDB4NzM3NTcwNzA2YzY5NjU2NDVmNzM3NDYxNzI3NDVmNjE3NCAweDYyNmY3MjcyNmY3NzVmNjE3MDcyIDB4NmM3NDc2IDB4NmQ2OTZlNWY3Mzc1NzA3MDZjNzkgMHg3MzZlNjk3MDY1NWY3MjYxNzQ2NSAweDczNzU3MDcwNmM3OTVmNjE3MDcyIDB4MTUxZjdjNzUKdHhuIE51bUFwcEFyZ3MKaW50Y18wIC8vIDAKPT0KYm56IG1haW5fbDI2CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4M2EzMGQxZDkgLy8gInNldF9jb2xsYXRlcmFsKHVpbnQ2NCl2b2lkIgo9PQpibnogbWFpbl9sMjUKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhiNzgzNjA1YSAvLyAiY3JlYXRlX2NvbGxhdGVyYWwoc3RyaW5nLHN0cmluZyx1aW50NjQpdm9pZCIKPT0KYm56IG1haW5fbDI0CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZDBhNzk0MDkgLy8gInN1cHBseShwYXkpdm9pZCIKPT0KYm56IG1haW5fbDIzCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4OTU4NjMzNGUgLy8gImJvcnJvdyhhc3NldCx1aW50NjQpdm9pZCIKPT0KYm56IG1haW5fbDIyCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4Zjk3ZTlmMjcgLy8gInJlcGF5KHBheSl2b2lkIgo9PQpibnogbWFpbl9sMjEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhiNzM1NWZkMSAvLyAid2l0aGRyYXcoKXZvaWQiCj09CmJueiBtYWluX2wyMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDA1MTMyM2I1IC8vICJyZWNlaXZlTWVzc2FnZSh1aW50NjQsYXNzZXQsdWludDY0LGFkZHJlc3Mpdm9pZCIKPT0KYm56IG1haW5fbDE5CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4NGQ4MDI3YzYgLy8gInVuX2JyaWRnZShhc3NldCx1aW50NjQsYXBwbGljYXRpb24sYWRkcmVzcyxhZGRyZXNzKXZvaWQiCj09CmJueiBtYWluX2wxOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGY0YjE1YjU3IC8vICJsaXF1aWRhdGUoYWRkcmVzcyl2b2lkIgo9PQpibnogbWFpbl9sMTcKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhkMWMxNmIzOSAvLyAic25pcGUocGF5LGFwcGxpY2F0aW9uLGFkZHJlc3MsYWRkcmVzcyl2b2lkIgo9PQpibnogbWFpbl9sMTYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhkMDFiNzY3NiAvLyAiYm9ycm93X29mKGFkZHJlc3MpKHVpbnQ2NCx1aW50NjQsdWludDY0KSIKPT0KYm56IG1haW5fbDE1CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4YTU0MjdmOGEgLy8gInN1cHBseV9vZihhZGRyZXNzKSh1aW50NjQsdWludDY0KSIKPT0KYm56IG1haW5fbDE0CmVycgptYWluX2wxNDoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBzdXBwbHlvZmNhc3Rlcl8yOQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTU6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgYm9ycm93b2ZjYXN0ZXJfMjgKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDE2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHNuaXBlY2FzdGVyXzI3CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxNzoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBsaXF1aWRhdGVjYXN0ZXJfMjYKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDE4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHVuYnJpZGdlY2FzdGVyXzI1CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxOToKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiByZWNlaXZlTWVzc2FnZWNhc3Rlcl8yNAppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMjA6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgd2l0aGRyYXdjYXN0ZXJfMjMKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDIxOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHJlcGF5Y2FzdGVyXzIyCmludGNfMSAvLyAxCnJldHVybgptYWluX2wyMjoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBib3Jyb3djYXN0ZXJfMjEKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDIzOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHN1cHBseWNhc3Rlcl8yMAppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMjQ6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgY3JlYXRlY29sbGF0ZXJhbGNhc3Rlcl8xOQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMjU6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgc2V0Y29sbGF0ZXJhbGNhc3Rlcl8xOAppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMjY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDMwCnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE9wdEluCj09CmJueiBtYWluX2wyOQplcnIKbWFpbl9sMjk6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIG9wdGluXzEKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDMwOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKY2FsbHN1YiBjcmVhdGVfMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMDoKcHJvdG8gMCAwCmJ5dGVjIDExIC8vICJib3Jyb3dfYXByIgpwdXNoaW50IDEyMCAvLyAxMjAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMSAvLyAiY29sbGF0ZXJhbCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgMTIgLy8gImx0diIKcHVzaGludCA4MDAwMDAgLy8gODAwMDAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDEzIC8vICJtaW5fc3VwcGx5IgppbnRjIDQgLy8gMTAwMDAwMAphcHBfZ2xvYmFsX3B1dApieXRlYyA1IC8vICJyYXRlX2RpdmlkZXIiCmludGMgNCAvLyAxMDAwMDAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDE0IC8vICJzbmlwZV9yYXRlIgpwdXNoaW50IDEwNTAwMDAgLy8gMTA1MDAwMAphcHBfZ2xvYmFsX3B1dApieXRlY18zIC8vICJzbmlwZWFibGVfYW1vdW50IgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyAxNSAvLyAic3VwcGx5X2FwciIKcHVzaGludCAxMDAgLy8gMTAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzIgLy8gInRvdGFsX2JvcnJvdyIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNCAvLyAidG90YWxfc3VwcGx5IgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIG9wdF9pbgpvcHRpbl8xOgpwcm90byAwIDAKdHhuIFNlbmRlcgpieXRlYyA2IC8vICJib3Jyb3dlZF9hbW91bnQiCmludGNfMCAvLyAwCmFwcF9sb2NhbF9wdXQKdHhuIFNlbmRlcgpieXRlYyA3IC8vICJib3Jyb3dlZF9zdGFydF9hdCIKaW50Y18wIC8vIDAKYXBwX2xvY2FsX3B1dAp0eG4gU2VuZGVyCmJ5dGVjIDkgLy8gInN1cHBsaWVkX2Ftb3VudCIKaW50Y18wIC8vIDAKYXBwX2xvY2FsX3B1dAp0eG4gU2VuZGVyCmJ5dGVjIDEwIC8vICJzdXBwbGllZF9zdGFydF9hdCIKaW50Y18wIC8vIDAKYXBwX2xvY2FsX3B1dApyZXRzdWIKCi8vIHNldF9jb2xsYXRlcmFsCnNldGNvbGxhdGVyYWxfMjoKcHJvdG8gMSAwCnR4biBTZW5kZXIKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09Ci8vIHVuYXV0aG9yaXplZAphc3NlcnQKYnl0ZWNfMSAvLyAiY29sbGF0ZXJhbCIKZnJhbWVfZGlnIC0xCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gY3JlYXRlX2NvbGxhdGVyYWwKY3JlYXRlY29sbGF0ZXJhbF8zOgpwcm90byAzIDAKdHhuIFNlbmRlcgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KLy8gdW5hdXRob3JpemVkCmFzc2VydAppdHhuX2JlZ2luCnB1c2hpbnQgMyAvLyBhY2ZnCml0eG5fZmllbGQgVHlwZUVudW0KZnJhbWVfZGlnIC0zCmV4dHJhY3QgMiAwCml0eG5fZmllbGQgQ29uZmlnQXNzZXROYW1lCmZyYW1lX2RpZyAtMgpleHRyYWN0IDIgMAppdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0VW5pdE5hbWUKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKaXR4bl9maWVsZCBDb25maWdBc3NldENsYXdiYWNrCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCml0eG5fZmllbGQgQ29uZmlnQXNzZXRSZXNlcnZlCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCml0eG5fZmllbGQgQ29uZmlnQXNzZXRNYW5hZ2VyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCml0eG5fZmllbGQgQ29uZmlnQXNzZXRGcmVlemUKaW50Y18xIC8vIDEKaXR4bl9maWVsZCBDb25maWdBc3NldERlZmF1bHRGcm96ZW4KZnJhbWVfZGlnIC0xCml0eG5fZmllbGQgQ29uZmlnQXNzZXRUb3RhbApwdXNoaW50IDYgLy8gNgppdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0RGVjaW1hbHMKaXR4bl9zdWJtaXQKcmV0c3ViCgovLyBzdXBwbHkKc3VwcGx5XzQ6CnByb3RvIDEgMApieXRlY18wIC8vICIiCmludGNfMCAvLyAwCmR1cG4gMwpieXRlY18wIC8vICIiCmR1cApmcmFtZV9kaWcgLTEKZ3R4bnMgUmVjZWl2ZXIKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKPT0KLy8gUmVjZWl2ZXIgbm90IHZhbGlkCmFzc2VydAp0eG4gU2VuZGVyCmJveF9sZW4Kc3RvcmUgMQpzdG9yZSAwCmxvYWQgMQppbnRjXzAgLy8gMAo9PQovLyBBbHJlYWR5IGhhcyBhIHBvc2l0aW9uCmFzc2VydApmcmFtZV9kaWcgLTEKZ3R4bnMgQW1vdW50CmJ5dGVjIDEzIC8vICJtaW5fc3VwcGx5IgphcHBfZ2xvYmFsX2dldAo+PQovLyBBbW91bnQgbm90IHN1ZmZpY2llbnQKYXNzZXJ0Cmdsb2JhbCBMYXRlc3RUaW1lc3RhbXAKZnJhbWVfYnVyeSAyCmZyYW1lX2RpZyAtMQpndHhucyBBbW91bnQKZnJhbWVfYnVyeSAxCnR4biBTZW5kZXIKYnl0ZWMgOSAvLyAic3VwcGxpZWRfYW1vdW50IgpmcmFtZV9kaWcgMQphcHBfbG9jYWxfcHV0CnR4biBTZW5kZXIKYnl0ZWMgMTAgLy8gInN1cHBsaWVkX3N0YXJ0X2F0IgpmcmFtZV9kaWcgMgphcHBfbG9jYWxfcHV0CmZyYW1lX2RpZyAxCml0b2IKZnJhbWVfZGlnIDIKaXRvYgpjb25jYXQKZnJhbWVfYnVyeSAwCnR4biBTZW5kZXIKYm94X2RlbApwb3AKdHhuIFNlbmRlcgpmcmFtZV9kaWcgMApib3hfcHV0CmJ5dGVjIDQgLy8gInRvdGFsX3N1cHBseSIKYnl0ZWMgNCAvLyAidG90YWxfc3VwcGx5IgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgLTEKZ3R4bnMgQW1vdW50CisKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBib3Jyb3cKYm9ycm93XzU6CnByb3RvIDIgMApieXRlY18wIC8vICIiCmludGNfMCAvLyAwCmR1cG4gNApieXRlY18wIC8vICIiCmR1cApieXRlY18xIC8vICJjb2xsYXRlcmFsIgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgLTIKdHhuYXMgQXNzZXRzCj09Ci8vIFdyb25nIGNvbGxhdGVyYWwKYXNzZXJ0Cmdsb2JhbCBMYXRlc3RUaW1lc3RhbXAKZnJhbWVfYnVyeSAxCnR4biBTZW5kZXIKZnJhbWVfZGlnIC0yCnR4bmFzIEFzc2V0cwphc3NldF9ob2xkaW5nX2dldCBBc3NldEJhbGFuY2UKc3RvcmUgMwpzdG9yZSAyCmxvYWQgMwovLyBOb3QgYmFsYW5jZSBmb3VuZAphc3NlcnQKbG9hZCAyCmZyYW1lX2RpZyAtMQo+PQovLyBJbnN1ZmZpY2llbnQgYmFsYW5jZQphc3NlcnQKZnJhbWVfZGlnIC0xCmZyYW1lX2J1cnkgMwpmcmFtZV9kaWcgMwppbnRjXzEgLy8gMQpjYWxsc3ViIHByaW5jaXBhbE9mXzE1CmZyYW1lX2J1cnkgMgppdHhuX2JlZ2luCmludGNfMiAvLyBhZnJ6Cml0eG5fZmllbGQgVHlwZUVudW0KZnJhbWVfZGlnIC0yCnR4bmFzIEFzc2V0cwppdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0CnR4biBTZW5kZXIKaXR4bl9maWVsZCBGcmVlemVBc3NldEFjY291bnQKaW50Y18wIC8vIDAKaXR4bl9maWVsZCBGcmVlemVBc3NldEZyb3plbgppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQppdHhuX25leHQKaW50Y18zIC8vIGF4ZmVyCml0eG5fZmllbGQgVHlwZUVudW0KZnJhbWVfZGlnIC0yCnR4bmFzIEFzc2V0cwppdHhuX2ZpZWxkIFhmZXJBc3NldApmcmFtZV9kaWcgMwppdHhuX2ZpZWxkIEFzc2V0QW1vdW50Cmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCml0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgp0eG4gU2VuZGVyCml0eG5fZmllbGQgQXNzZXRTZW5kZXIKaW50Y18wIC8vIDAKaXR4bl9maWVsZCBGZWUKaXR4bl9uZXh0CmludGNfMiAvLyBhZnJ6Cml0eG5fZmllbGQgVHlwZUVudW0KZnJhbWVfZGlnIC0yCnR4bmFzIEFzc2V0cwppdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0CnR4biBTZW5kZXIKaXR4bl9maWVsZCBGcmVlemVBc3NldEFjY291bnQKaW50Y18xIC8vIDEKaXR4bl9maWVsZCBGcmVlemVBc3NldEZyb3plbgppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQppdHhuX25leHQKaW50Y18xIC8vIHBheQppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAyCml0eG5fZmllbGQgQW1vdW50CnR4biBTZW5kZXIKaXR4bl9maWVsZCBSZWNlaXZlcgpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwppdHhuX2ZpZWxkIFNlbmRlcgppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQppdHhuX3N1Ym1pdAp0eG4gU2VuZGVyCmJ5dGVjIDYgLy8gImJvcnJvd2VkX2Ftb3VudCIKZnJhbWVfZGlnIDIKYXBwX2xvY2FsX3B1dAp0eG4gU2VuZGVyCmJ5dGVjIDcgLy8gImJvcnJvd2VkX3N0YXJ0X2F0IgpmcmFtZV9kaWcgMQphcHBfbG9jYWxfcHV0CmZyYW1lX2RpZyAyCml0b2IKZnJhbWVfZGlnIDMKaXRvYgpjb25jYXQKZnJhbWVfZGlnIDEKaXRvYgpjb25jYXQKZnJhbWVfYnVyeSAwCnR4biBTZW5kZXIKYm94X2RlbApwb3AKdHhuIFNlbmRlcgpmcmFtZV9kaWcgMApib3hfcHV0CmJ5dGVjXzIgLy8gInRvdGFsX2JvcnJvdyIKYnl0ZWNfMiAvLyAidG90YWxfYm9ycm93IgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgMgorCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gcmVwYXkKcmVwYXlfNjoKcHJvdG8gMSAwCmJ5dGVjXzAgLy8gIiIKaW50Y18wIC8vIDAKZHVwbiAzCnR4biBTZW5kZXIKYm94X2xlbgpzdG9yZSA1CnN0b3JlIDQKbG9hZCA1Ci8vIFlvdSBkb250IGhhdmUgYSBib3Jyb3cgcG9zaXRpb24KYXNzZXJ0CnR4biBTZW5kZXIKYm94X2dldApzdG9yZSA3CnN0b3JlIDYKbG9hZCA3CmFzc2VydApsb2FkIDYKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCnB1c2hpbnQgOCAvLyA4CmV4dHJhY3RfdWludDY0CmZyYW1lX2J1cnkgNApmcmFtZV9kaWcgMAppbnRjXzAgLy8gMApleHRyYWN0X3VpbnQ2NApmcmFtZV9idXJ5IDMKZnJhbWVfZGlnIDAKcHVzaGludCAxNiAvLyAxNgpleHRyYWN0X3VpbnQ2NApmcmFtZV9idXJ5IDIKZnJhbWVfZGlnIDMKZnJhbWVfZGlnIDIKYnl0ZWMgMTEgLy8gImJvcnJvd19hcHIiCmFwcF9nbG9iYWxfZ2V0CmNhbGxzdWIgaW50ZXJlc3RPZl8xNgpmcmFtZV9idXJ5IDEKZnJhbWVfZGlnIC0xCmd0eG5zIFJlY2VpdmVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCj09CmFzc2VydApmcmFtZV9kaWcgLTEKZ3R4bnMgQW1vdW50CmZyYW1lX2RpZyAxCmZyYW1lX2RpZyAzCisKPj0KLy8gSW5zdWZmaWNpZW50IGFtb3VudAphc3NlcnQKaXR4bl9iZWdpbgppbnRjXzMgLy8gYXhmZXIKaXR4bl9maWVsZCBUeXBlRW51bQpmcmFtZV9kaWcgNAppdHhuX2ZpZWxkIEFzc2V0QW1vdW50CmJ5dGVjXzEgLy8gImNvbGxhdGVyYWwiCmFwcF9nbG9iYWxfZ2V0Cml0eG5fZmllbGQgWGZlckFzc2V0CnR4biBTZW5kZXIKaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCml0eG5fZmllbGQgQXNzZXRTZW5kZXIKaW50Y18wIC8vIDAKaXR4bl9maWVsZCBGZWUKaXR4bl9zdWJtaXQKdHhuIFNlbmRlcgpieXRlYyA2IC8vICJib3Jyb3dlZF9hbW91bnQiCmludGNfMCAvLyAwCmFwcF9sb2NhbF9wdXQKdHhuIFNlbmRlcgpieXRlYyA3IC8vICJib3Jyb3dlZF9zdGFydF9hdCIKaW50Y18wIC8vIDAKYXBwX2xvY2FsX3B1dAp0eG4gU2VuZGVyCmJveF9kZWwKcG9wCmJ5dGVjXzIgLy8gInRvdGFsX2JvcnJvdyIKYnl0ZWNfMiAvLyAidG90YWxfYm9ycm93IgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgMwotCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gd2l0aGRyYXcKd2l0aGRyYXdfNzoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKaW50Y18wIC8vIDAKZHVwbiAyCnR4biBTZW5kZXIKYm94X2xlbgpzdG9yZSA5CnN0b3JlIDgKbG9hZCA5Ci8vIFlvdSBkb250IGhhdmUgYSBzdXBwbHkgcG9zaXRpb24KYXNzZXJ0CnR4biBTZW5kZXIKYm94X2dldApzdG9yZSAxMQpzdG9yZSAxMApsb2FkIDExCmFzc2VydApsb2FkIDEwCmZyYW1lX2J1cnkgMApmcmFtZV9kaWcgMApwdXNoaW50IDggLy8gOApleHRyYWN0X3VpbnQ2NApmcmFtZV9idXJ5IDIKZnJhbWVfZGlnIDAKaW50Y18wIC8vIDAKZXh0cmFjdF91aW50NjQKZnJhbWVfYnVyeSAzCmZyYW1lX2RpZyAzCmZyYW1lX2RpZyAyCmJ5dGVjIDE1IC8vICJzdXBwbHlfYXByIgphcHBfZ2xvYmFsX2dldApjYWxsc3ViIGludGVyZXN0T2ZfMTYKZnJhbWVfYnVyeSAxCml0eG5fYmVnaW4KaW50Y18xIC8vIHBheQppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAxCmZyYW1lX2RpZyAzCisKaXR4bl9maWVsZCBBbW91bnQKdHhuIFNlbmRlcgppdHhuX2ZpZWxkIFJlY2VpdmVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCml0eG5fZmllbGQgU2VuZGVyCmludGNfMCAvLyAwCml0eG5fZmllbGQgRmVlCml0eG5fc3VibWl0CnR4biBTZW5kZXIKYnl0ZWMgOSAvLyAic3VwcGxpZWRfYW1vdW50IgppbnRjXzAgLy8gMAphcHBfbG9jYWxfcHV0CnR4biBTZW5kZXIKYnl0ZWMgMTAgLy8gInN1cHBsaWVkX3N0YXJ0X2F0IgppbnRjXzAgLy8gMAphcHBfbG9jYWxfcHV0CnR4biBTZW5kZXIKYm94X2RlbApwb3AKYnl0ZWMgNCAvLyAidG90YWxfc3VwcGx5IgpieXRlYyA0IC8vICJ0b3RhbF9zdXBwbHkiCmFwcF9nbG9iYWxfZ2V0CmZyYW1lX2RpZyAzCi0KYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyByZWNlaXZlTWVzc2FnZQpyZWNlaXZlTWVzc2FnZV84Ogpwcm90byA0IDAKZnJhbWVfZGlnIC00CmludGNfMCAvLyAwCj49Ci8vIEludmFsaWQgbm9uY2UKYXNzZXJ0CmZyYW1lX2RpZyAtMwp0eG5hcyBBc3NldHMKYnl0ZWNfMSAvLyAiY29sbGF0ZXJhbCIKYXBwX2dsb2JhbF9nZXQKPT0KLy8gSW52YWxpZCBhc3NldAphc3NlcnQKaXR4bl9iZWdpbgppbnRjXzMgLy8gYXhmZXIKaXR4bl9maWVsZCBUeXBlRW51bQpmcmFtZV9kaWcgLTIKaXR4bl9maWVsZCBBc3NldEFtb3VudApmcmFtZV9kaWcgLTMKdHhuYXMgQXNzZXRzCml0eG5fZmllbGQgWGZlckFzc2V0CmZyYW1lX2RpZyAtMQppdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKaXR4bl9maWVsZCBBc3NldFNlbmRlcgppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQppdHhuX3N1Ym1pdApyZXRzdWIKCi8vIHVuX2JyaWRnZQp1bmJyaWRnZV85Ogpwcm90byA1IDAKaW50Y18wIC8vIDAKYnl0ZWNfMSAvLyAiY29sbGF0ZXJhbCIKYXBwX2dsb2JhbF9nZXQKZnJhbWVfZGlnIC01CnR4bmFzIEFzc2V0cwo9PQovLyBXcm9uZyBjb2xsYXRlcmFsCmFzc2VydAp0eG4gU2VuZGVyCmZyYW1lX2RpZyAtNQp0eG5hcyBBc3NldHMKYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCnN0b3JlIDE0CnN0b3JlIDEzCmxvYWQgMTQKLy8gTm90IGJhbGFuY2UgZm91bmQKYXNzZXJ0CmxvYWQgMTMKZnJhbWVfZGlnIC00Cj49Ci8vIEluc3VmZmljaWVudCBiYWxhbmNlCmFzc2VydApjYWxsc3ViIGdldE1lc3NhZ2VGZWVfMTQKZnJhbWVfYnVyeSAwCmJ5dGVjXzEgLy8gImNvbGxhdGVyYWwiCmFwcF9nbG9iYWxfZ2V0Cml0b2IKZnJhbWVfZGlnIC00Cml0b2IKY29uY2F0CnR4biBTZW5kZXIKY29uY2F0CnN0b3JlIDEyCml0eG5fYmVnaW4KaW50Y18xIC8vIHBheQppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAtMgppdHhuX2ZpZWxkIFJlY2VpdmVyCmZyYW1lX2RpZyAwCml0eG5fZmllbGQgQW1vdW50CmludGNfMCAvLyAwCml0eG5fZmllbGQgRmVlCml0eG5fbmV4dAppbnRjXzIgLy8gYWZyegppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAtNQp0eG5hcyBBc3NldHMKaXR4bl9maWVsZCBGcmVlemVBc3NldAp0eG4gU2VuZGVyCml0eG5fZmllbGQgRnJlZXplQXNzZXRBY2NvdW50CmludGNfMCAvLyAwCml0eG5fZmllbGQgRnJlZXplQXNzZXRGcm96ZW4KaW50Y18wIC8vIDAKaXR4bl9maWVsZCBGZWUKaXR4bl9uZXh0CmludGNfMyAvLyBheGZlcgppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAtNQp0eG5hcyBBc3NldHMKaXR4bl9maWVsZCBYZmVyQXNzZXQKZnJhbWVfZGlnIC00Cml0eG5fZmllbGQgQXNzZXRBbW91bnQKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCnR4biBTZW5kZXIKaXR4bl9maWVsZCBBc3NldFNlbmRlcgppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQppdHhuX25leHQKaW50Y18yIC8vIGFmcnoKaXR4bl9maWVsZCBUeXBlRW51bQpmcmFtZV9kaWcgLTUKdHhuYXMgQXNzZXRzCml0eG5fZmllbGQgRnJlZXplQXNzZXQKdHhuIFNlbmRlcgppdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0QWNjb3VudAppbnRjXzEgLy8gMQppdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0RnJvemVuCmludGNfMCAvLyAwCml0eG5fZmllbGQgRmVlCml0eG5fbmV4dApwdXNoaW50IDYgLy8gYXBwbAppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAtMwp0eG5hcyBBcHBsaWNhdGlvbnMKaXR4bl9maWVsZCBBcHBsaWNhdGlvbklECmJ5dGVjIDggLy8gInB1Ymxpc2hNZXNzYWdlIgppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwpsb2FkIDEyCml0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCmludGNfMCAvLyAwCml0b2IKaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKZnJhbWVfZGlnIC0xCml0eG5fZmllbGQgQWNjb3VudHMKYnl0ZWMgOCAvLyAicHVibGlzaE1lc3NhZ2UiCml0eG5fZmllbGQgTm90ZQppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQppdHhuX3N1Ym1pdApyZXRzdWIKCi8vIGxpcXVpZGF0ZQpsaXF1aWRhdGVfMTA6CnByb3RvIDEgMApieXRlY18wIC8vICIiCmludGNfMCAvLyAwCmR1cAp0eG4gU2VuZGVyCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmZyYW1lX2RpZyAtMQpib3hfbGVuCnN0b3JlIDE2CnN0b3JlIDE1CmxvYWQgMTYKLy8gQWRkcmVzcyBkb250IGhhdmUgYSBib3Jyb3cgcG9zaXRpb24KYXNzZXJ0CmZyYW1lX2RpZyAtMQpib3hfZ2V0CnN0b3JlIDE4CnN0b3JlIDE3CmxvYWQgMTgKYXNzZXJ0CmxvYWQgMTcKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCmludGNfMCAvLyAwCmV4dHJhY3RfdWludDY0CmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgMApwdXNoaW50IDggLy8gOApleHRyYWN0X3VpbnQ2NApmcmFtZV9idXJ5IDIKZnJhbWVfZGlnIC0xCmJ5dGVjIDYgLy8gImJvcnJvd2VkX2Ftb3VudCIKaW50Y18wIC8vIDAKYXBwX2xvY2FsX3B1dApmcmFtZV9kaWcgLTEKYnl0ZWMgNyAvLyAiYm9ycm93ZWRfc3RhcnRfYXQiCmludGNfMCAvLyAwCmFwcF9sb2NhbF9wdXQKZnJhbWVfZGlnIC0xCmJveF9kZWwKcG9wCmJ5dGVjXzIgLy8gInRvdGFsX2JvcnJvdyIKYnl0ZWNfMiAvLyAidG90YWxfYm9ycm93IgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgMQotCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzMgLy8gInNuaXBlYWJsZV9hbW91bnQiCmJ5dGVjXzMgLy8gInNuaXBlYWJsZV9hbW91bnQiCmFwcF9nbG9iYWxfZ2V0CmZyYW1lX2RpZyAyCisKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBzbmlwZQpzbmlwZV8xMToKcHJvdG8gNCAwCmludGNfMCAvLyAwCmR1cApmcmFtZV9kaWcgLTQKZ3R4bnMgUmVjZWl2ZXIKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKPT0KLy8gUmVjZWl2ZXIgbm90IHZhbGlkCmFzc2VydApmcmFtZV9kaWcgLTQKZ3R4bnMgQW1vdW50CmNhbGxzdWIgc25pcGVPZl8xNwpmcmFtZV9idXJ5IDEKYnl0ZWNfMyAvLyAic25pcGVhYmxlX2Ftb3VudCIKYXBwX2dsb2JhbF9nZXQKZnJhbWVfZGlnIDEKPj0KLy8gSW5zdWZmaWNpZW50IGFtb3VudAphc3NlcnQKYnl0ZWNfMyAvLyAic25pcGVhYmxlX2Ftb3VudCIKYnl0ZWNfMyAvLyAic25pcGVhYmxlX2Ftb3VudCIKYXBwX2dsb2JhbF9nZXQKZnJhbWVfZGlnIDEKLQphcHBfZ2xvYmFsX3B1dAp0eG4gU2VuZGVyCmJveF9sZW4Kc3RvcmUgMjEKc3RvcmUgMjAKbG9hZCAyMQppbnRjXzAgLy8gMAo9PQovLyBZb3UgaGF2ZSBhIGJvcnJvdyBwb3NpdGlvbgphc3NlcnQKY2FsbHN1YiBnZXRNZXNzYWdlRmVlXzE0CmZyYW1lX2J1cnkgMApieXRlY18xIC8vICJjb2xsYXRlcmFsIgphcHBfZ2xvYmFsX2dldAppdG9iCmZyYW1lX2RpZyAxCml0b2IKY29uY2F0CnR4biBTZW5kZXIKY29uY2F0CnN0b3JlIDE5Cml0eG5fYmVnaW4KaW50Y18xIC8vIHBheQppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAtMgppdHhuX2ZpZWxkIFJlY2VpdmVyCmZyYW1lX2RpZyAwCml0eG5fZmllbGQgQW1vdW50CmludGNfMCAvLyAwCml0eG5fZmllbGQgRmVlCml0eG5fbmV4dApwdXNoaW50IDYgLy8gYXBwbAppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAtMwp0eG5hcyBBcHBsaWNhdGlvbnMKaXR4bl9maWVsZCBBcHBsaWNhdGlvbklECmJ5dGVjIDggLy8gInB1Ymxpc2hNZXNzYWdlIgppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwpsb2FkIDE5Cml0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCmludGNfMCAvLyAwCml0b2IKaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKZnJhbWVfZGlnIC0xCml0eG5fZmllbGQgQWNjb3VudHMKYnl0ZWMgOCAvLyAicHVibGlzaE1lc3NhZ2UiCml0eG5fZmllbGQgTm90ZQppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIEZlZQppdHhuX3N1Ym1pdApyZXRzdWIKCi8vIGJvcnJvd19vZgpib3Jyb3dvZl8xMjoKcHJvdG8gMSAxCmJ5dGVjXzAgLy8gIiIKZnJhbWVfZGlnIC0xCmJveF9nZXQKc3RvcmUgMjMKc3RvcmUgMjIKbG9hZCAyMwphc3NlcnQKbG9hZCAyMgpmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBzdXBwbHlfb2YKc3VwcGx5b2ZfMTM6CnByb3RvIDEgMQpieXRlY18wIC8vICIiCmZyYW1lX2RpZyAtMQpib3hfZ2V0CnN0b3JlIDI1CnN0b3JlIDI0CmxvYWQgMjUKYXNzZXJ0CmxvYWQgMjQKZnJhbWVfYnVyeSAwCnJldHN1YgoKLy8gZ2V0TWVzc2FnZUZlZQpnZXRNZXNzYWdlRmVlXzE0Ogpwcm90byAwIDEKaW50Y18wIC8vIDAKcmV0c3ViCgovLyBwcmluY2lwYWxPZgpwcmluY2lwYWxPZl8xNToKcHJvdG8gMiAxCmZyYW1lX2RpZyAtMgpmcmFtZV9kaWcgLTEKKgpieXRlYyAxMiAvLyAibHR2IgphcHBfZ2xvYmFsX2dldAoqCmJ5dGVjIDUgLy8gInJhdGVfZGl2aWRlciIKYXBwX2dsb2JhbF9nZXQKLwpyZXRzdWIKCi8vIGludGVyZXN0T2YKaW50ZXJlc3RPZl8xNjoKcHJvdG8gMyAxCmZyYW1lX2RpZyAtMwpmcmFtZV9kaWcgLTEKKgpnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCmZyYW1lX2RpZyAtMgotCioKYnl0ZWMgNSAvLyAicmF0ZV9kaXZpZGVyIgphcHBfZ2xvYmFsX2dldAovCnJldHN1YgoKLy8gc25pcGVPZgpzbmlwZU9mXzE3Ogpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmJ5dGVjIDE0IC8vICJzbmlwZV9yYXRlIgphcHBfZ2xvYmFsX2dldAoqCmJ5dGVjIDUgLy8gInJhdGVfZGl2aWRlciIKYXBwX2dsb2JhbF9nZXQKLwpyZXRzdWIKCi8vIHNldF9jb2xsYXRlcmFsX2Nhc3RlcgpzZXRjb2xsYXRlcmFsY2FzdGVyXzE4Ogpwcm90byAwIDAKaW50Y18wIC8vIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCmZyYW1lX2J1cnkgMApmcmFtZV9kaWcgMApjYWxsc3ViIHNldGNvbGxhdGVyYWxfMgpyZXRzdWIKCi8vIGNyZWF0ZV9jb2xsYXRlcmFsX2Nhc3RlcgpjcmVhdGVjb2xsYXRlcmFsY2FzdGVyXzE5Ogpwcm90byAwIDAKYnl0ZWNfMCAvLyAiIgpkdXAKaW50Y18wIC8vIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpmcmFtZV9idXJ5IDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpmcmFtZV9idXJ5IDEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwpidG9pCmZyYW1lX2J1cnkgMgpmcmFtZV9kaWcgMApmcmFtZV9kaWcgMQpmcmFtZV9kaWcgMgpjYWxsc3ViIGNyZWF0ZWNvbGxhdGVyYWxfMwpyZXRzdWIKCi8vIHN1cHBseV9jYXN0ZXIKc3VwcGx5Y2FzdGVyXzIwOgpwcm90byAwIDAKaW50Y18wIC8vIDAKdHhuIEdyb3VwSW5kZXgKaW50Y18xIC8vIDEKLQpmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKZ3R4bnMgVHlwZUVudW0KaW50Y18xIC8vIHBheQo9PQphc3NlcnQKZnJhbWVfZGlnIDAKY2FsbHN1YiBzdXBwbHlfNApyZXRzdWIKCi8vIGJvcnJvd19jYXN0ZXIKYm9ycm93Y2FzdGVyXzIxOgpwcm90byAwIDAKaW50Y18wIC8vIDAKZHVwCnR4bmEgQXBwbGljYXRpb25BcmdzIDEKaW50Y18wIC8vIDAKZ2V0Ynl0ZQpmcmFtZV9idXJ5IDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpidG9pCmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgMApmcmFtZV9kaWcgMQpjYWxsc3ViIGJvcnJvd181CnJldHN1YgoKLy8gcmVwYXlfY2FzdGVyCnJlcGF5Y2FzdGVyXzIyOgpwcm90byAwIDAKaW50Y18wIC8vIDAKdHhuIEdyb3VwSW5kZXgKaW50Y18xIC8vIDEKLQpmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKZ3R4bnMgVHlwZUVudW0KaW50Y18xIC8vIHBheQo9PQphc3NlcnQKZnJhbWVfZGlnIDAKY2FsbHN1YiByZXBheV82CnJldHN1YgoKLy8gd2l0aGRyYXdfY2FzdGVyCndpdGhkcmF3Y2FzdGVyXzIzOgpwcm90byAwIDAKY2FsbHN1YiB3aXRoZHJhd183CnJldHN1YgoKLy8gcmVjZWl2ZU1lc3NhZ2VfY2FzdGVyCnJlY2VpdmVNZXNzYWdlY2FzdGVyXzI0Ogpwcm90byAwIDAKaW50Y18wIC8vIDAKZHVwbiAyCmJ5dGVjXzAgLy8gIiIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCmZyYW1lX2J1cnkgMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmludGNfMCAvLyAwCmdldGJ5dGUKZnJhbWVfYnVyeSAxCnR4bmEgQXBwbGljYXRpb25BcmdzIDMKYnRvaQpmcmFtZV9idXJ5IDIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNApmcmFtZV9idXJ5IDMKZnJhbWVfZGlnIDAKZnJhbWVfZGlnIDEKZnJhbWVfZGlnIDIKZnJhbWVfZGlnIDMKY2FsbHN1YiByZWNlaXZlTWVzc2FnZV84CnJldHN1YgoKLy8gdW5fYnJpZGdlX2Nhc3Rlcgp1bmJyaWRnZWNhc3Rlcl8yNToKcHJvdG8gMCAwCmludGNfMCAvLyAwCmR1cG4gMgpieXRlY18wIC8vICIiCmR1cAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKZnJhbWVfYnVyeSAwCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKYnRvaQpmcmFtZV9idXJ5IDEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwppbnRjXzAgLy8gMApnZXRieXRlCmZyYW1lX2J1cnkgMgp0eG5hIEFwcGxpY2F0aW9uQXJncyA0CmZyYW1lX2J1cnkgMwp0eG5hIEFwcGxpY2F0aW9uQXJncyA1CmZyYW1lX2J1cnkgNApmcmFtZV9kaWcgMApmcmFtZV9kaWcgMQpmcmFtZV9kaWcgMgpmcmFtZV9kaWcgMwpmcmFtZV9kaWcgNApjYWxsc3ViIHVuYnJpZGdlXzkKcmV0c3ViCgovLyBsaXF1aWRhdGVfY2FzdGVyCmxpcXVpZGF0ZWNhc3Rlcl8yNjoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKY2FsbHN1YiBsaXF1aWRhdGVfMTAKcmV0c3ViCgovLyBzbmlwZV9jYXN0ZXIKc25pcGVjYXN0ZXJfMjc6CnByb3RvIDAgMAppbnRjXzAgLy8gMApkdXAKYnl0ZWNfMCAvLyAiIgpkdXAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQppbnRjXzAgLy8gMApnZXRieXRlCmZyYW1lX2J1cnkgMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmZyYW1lX2J1cnkgMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAzCmZyYW1lX2J1cnkgMwp0eG4gR3JvdXBJbmRleAppbnRjXzEgLy8gMQotCmZyYW1lX2J1cnkgMApmcmFtZV9kaWcgMApndHhucyBUeXBlRW51bQppbnRjXzEgLy8gcGF5Cj09CmFzc2VydApmcmFtZV9kaWcgMApmcmFtZV9kaWcgMQpmcmFtZV9kaWcgMgpmcmFtZV9kaWcgMwpjYWxsc3ViIHNuaXBlXzExCnJldHN1YgoKLy8gYm9ycm93X29mX2Nhc3Rlcgpib3Jyb3dvZmNhc3Rlcl8yODoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKZHVwCnR4bmEgQXBwbGljYXRpb25BcmdzIDEKZnJhbWVfYnVyeSAxCmZyYW1lX2RpZyAxCmNhbGxzdWIgYm9ycm93b2ZfMTIKZnJhbWVfYnVyeSAwCmJ5dGVjIDE2IC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIHN1cHBseV9vZl9jYXN0ZXIKc3VwcGx5b2ZjYXN0ZXJfMjk6CnByb3RvIDAgMApieXRlY18wIC8vICIiCmR1cAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgMQpjYWxsc3ViIHN1cHBseW9mXzEzCmZyYW1lX2J1cnkgMApieXRlYyAxNiAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCmNvbmNhdApsb2cKcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 10
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 4
        }
    },
    "schema": {
        "global": {
            "declared": {
                "borrow_apr": {
                    "type": "uint64",
                    "key": "borrow_apr",
                    "descr": ""
                },
                "collateral": {
                    "type": "uint64",
                    "key": "collateral",
                    "descr": ""
                },
                "ltv": {
                    "type": "uint64",
                    "key": "ltv",
                    "descr": ""
                },
                "min_supply": {
                    "type": "uint64",
                    "key": "min_supply",
                    "descr": ""
                },
                "rate_divider": {
                    "type": "uint64",
                    "key": "rate_divider",
                    "descr": ""
                },
                "snipe_rate": {
                    "type": "uint64",
                    "key": "snipe_rate",
                    "descr": ""
                },
                "snipeable_amount": {
                    "type": "uint64",
                    "key": "snipeable_amount",
                    "descr": ""
                },
                "supply_apr": {
                    "type": "uint64",
                    "key": "supply_apr",
                    "descr": ""
                },
                "total_borrow": {
                    "type": "uint64",
                    "key": "total_borrow",
                    "descr": ""
                },
                "total_supply": {
                    "type": "uint64",
                    "key": "total_supply",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "borrowed_amount": {
                    "type": "uint64",
                    "key": "borrowed_amount",
                    "descr": ""
                },
                "borrowed_start_at": {
                    "type": "uint64",
                    "key": "borrowed_start_at",
                    "descr": ""
                },
                "supplied_amount": {
                    "type": "uint64",
                    "key": "supplied_amount",
                    "descr": ""
                },
                "supplied_start_at": {
                    "type": "uint64",
                    "key": "supplied_start_at",
                    "descr": ""
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "TunnelFi",
        "methods": [
            {
                "name": "set_collateral",
                "args": [
                    {
                        "type": "uint64",
                        "name": "asset_id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "create_collateral",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "unit_name"
                    },
                    {
                        "type": "uint64",
                        "name": "supply"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "supply",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "borrow",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "repay",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "withdraw",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "receiveMessage",
                "args": [
                    {
                        "type": "uint64",
                        "name": "nonce"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "address",
                        "name": "receiver"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "un_bridge",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "application",
                        "name": "wormhole"
                    },
                    {
                        "type": "address",
                        "name": "wormhole_addr"
                    },
                    {
                        "type": "address",
                        "name": "storage_addr"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "liquidate",
                "args": [
                    {
                        "type": "address",
                        "name": "borrower"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "snipe",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    },
                    {
                        "type": "application",
                        "name": "wormhole"
                    },
                    {
                        "type": "address",
                        "name": "wormhole_addr"
                    },
                    {
                        "type": "address",
                        "name": "storage_addr"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "borrow_of",
                "args": [
                    {
                        "type": "address",
                        "name": "address"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64,uint64)"
                }
            },
            {
                "name": "supply_of",
                "args": [
                    {
                        "type": "address",
                        "name": "address"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64)"
                }
            }
        ],
        "networks": {},
        "desc": "RWA Bridge and Lending Platform"
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "opt_in": "CALL"
    }
}