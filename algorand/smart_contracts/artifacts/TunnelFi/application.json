{
    "hints": {
        "opt_in_asset(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_collateral(string,string,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "supply(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "borrow(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "repay(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "withdraw()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "receiveMessage(uint64,asset,uint64,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "un_bridge(asset,application,address,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "liquidate(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "snipe(pay,application,address,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "borrow_of(address)(uint64,uint64,uint64)": {
            "structs": {
                "output": {
                    "name": "Borrow",
                    "elements": [
                        [
                            "principal",
                            "uint64"
                        ],
                        [
                            "collateral",
                            "uint64"
                        ],
                        [
                            "start_at",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "supply_of(address)(uint64,uint64)": {
            "structs": {
                "output": {
                    "name": "Supply",
                    "elements": [
                        [
                            "principal",
                            "uint64"
                        ],
                        [
                            "start_at",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 10
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 4
        }
    },
    "schema": {
        "global": {
            "declared": {
                "borrow_apr": {
                    "type": "uint64",
                    "key": "borrow_apr",
                    "descr": ""
                },
                "collateral": {
                    "type": "uint64",
                    "key": "collateral",
                    "descr": ""
                },
                "ltv": {
                    "type": "uint64",
                    "key": "ltv",
                    "descr": ""
                },
                "min_supply": {
                    "type": "uint64",
                    "key": "min_supply",
                    "descr": ""
                },
                "rate_divider": {
                    "type": "uint64",
                    "key": "rate_divider",
                    "descr": ""
                },
                "snipe_rate": {
                    "type": "uint64",
                    "key": "snipe_rate",
                    "descr": ""
                },
                "snipeable_amount": {
                    "type": "uint64",
                    "key": "snipeable_amount",
                    "descr": ""
                },
                "supply_apr": {
                    "type": "uint64",
                    "key": "supply_apr",
                    "descr": ""
                },
                "total_borrow": {
                    "type": "uint64",
                    "key": "total_borrow",
                    "descr": ""
                },
                "total_supply": {
                    "type": "uint64",
                    "key": "total_supply",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "borrowed_amount": {
                    "type": "uint64",
                    "key": "borrowed_amount",
                    "descr": ""
                },
                "borrowed_start_at": {
                    "type": "uint64",
                    "key": "borrowed_start_at",
                    "descr": ""
                },
                "supplied_start_at": {
                    "type": "uint64",
                    "key": "supplied_start_at",
                    "descr": ""
                },
                "supplied_amount": {
                    "type": "uint64",
                    "key": "supplied_amount",
                    "descr": ""
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "TunnelFi",
        "methods": [
            {
                "name": "opt_in_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "create_collateral",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "unit_name"
                    },
                    {
                        "type": "uint64",
                        "name": "supply"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "supply",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "borrow",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "repay",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "withdraw",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "receiveMessage",
                "args": [
                    {
                        "type": "uint64",
                        "name": "nonce"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "address",
                        "name": "receiver"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "un_bridge",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "application",
                        "name": "wormhole"
                    },
                    {
                        "type": "address",
                        "name": "wormhole_account"
                    },
                    {
                        "type": "address",
                        "name": "storage_account"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "liquidate",
                "args": [
                    {
                        "type": "address",
                        "name": "borrower"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "snipe",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    },
                    {
                        "type": "application",
                        "name": "wormhole"
                    },
                    {
                        "type": "address",
                        "name": "wormhole_account"
                    },
                    {
                        "type": "address",
                        "name": "storage_account"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "borrow_of",
                "args": [
                    {
                        "type": "address",
                        "name": "address"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64,uint64)"
                }
            },
            {
                "name": "supply_of",
                "args": [
                    {
                        "type": "address",
                        "name": "address"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64)"
                }
            }
        ],
        "networks": {},
        "desc": "RWA Bridge and Lending Platform"
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "opt_in": "CALL"
    }
}
