{
  "contractName": "IClaimTopicsRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimTopic",
          "type": "uint256"
        }
      ],
      "name": "ClaimTopicAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimTopic",
          "type": "uint256"
        }
      ],
      "name": "ClaimTopicRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimTopic",
          "type": "uint256"
        }
      ],
      "name": "addClaimTopic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimTopic",
          "type": "uint256"
        }
      ],
      "name": "removeClaimTopic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClaimTopics",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnershipOnClaimTopicsRegistryContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipOnClaimTopicsRegistryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaimTopic(uint256)\":{\"details\":\"Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event\",\"params\":{\"_claimTopic\":\"The claim topic index\"}},\"getClaimTopics()\":{\"details\":\"Get the trusted claim topics for the security token\",\"returns\":{\"_0\":\"Array of trusted claim topics\"}},\"removeClaimTopic(uint256)\":{\"details\":\"Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event\",\"params\":{\"_claimTopic\":\"The claim topic index\"}},\"transferOwnershipOnClaimTopicsRegistryContract(address)\":{\"details\":\"Transfers the Ownership of ClaimTopics to a new Owner.  Only owner can call.\",\"params\":{\"_newOwner\":\"The new owner of this contract.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicAdded(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry\"},\"ClaimTopicRemoved(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0xaa23e9b3c07a6620942eb805238c70a37b681e4df4497a80498fbd20da5faabc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e82da344556272e5d99efa5af48eaf6576ef2559f01126831330bc8a28b3b597\",\"dweb:/ipfs/Qme6U4dz1cg293onxJUcmFmKyKg5EZm35k9KDKj4DJneEM\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IClaimTopicsRegistry {\r\n    /**\r\n     *  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\r\n     *  the event is emitted by the 'addClaimTopic' function\r\n     *  `claimTopic` is the required claim added to the Claim Topics Registry\r\n     */\r\n    event ClaimTopicAdded(uint256 indexed claimTopic);\r\n\r\n    /**\r\n     *  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\r\n     *  the event is emitted by the 'removeClaimTopic' function\r\n     *  `claimTopic` is the required claim removed from the Claim Topics Registry\r\n     */\r\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\r\n\r\n    /**\r\n     * @dev Add a trusted claim topic (For example: KYC=1, AML=2).\r\n     * Only owner can call.\r\n     * emits `ClaimTopicAdded` event\r\n     * @param _claimTopic The claim topic index\r\n     */\r\n    function addClaimTopic(uint256 _claimTopic) external;\r\n\r\n    /**\r\n     *  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\r\n     *  Only owner can call.\r\n     *  emits `ClaimTopicRemoved` event\r\n     *  @param _claimTopic The claim topic index\r\n     */\r\n    function removeClaimTopic(uint256 _claimTopic) external;\r\n\r\n    /**\r\n     *  @dev Get the trusted claim topics for the security token\r\n     *  @return Array of trusted claim topics\r\n     */\r\n    function getClaimTopics() external view returns (uint256[] memory);\r\n\r\n    /**\r\n     *  @dev Transfers the Ownership of ClaimTopics to a new Owner.\r\n     *  Only owner can call.\r\n     *  @param _newOwner The new owner of this contract.\r\n     */\r\n    function transferOwnershipOnClaimTopicsRegistryContract(\r\n        address _newOwner\r\n    ) external;\r\n}\r\n",
  "sourcePath": "C:\\Users\\DELL\\Documents\\tunnel\\solidity\\contracts\\interfaces\\IClaimTopicsRegistry.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IClaimTopicsRegistry.sol",
    "exportedSymbols": {
      "IClaimTopicsRegistry": [
        1578
      ]
    },
    "id": 1579,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1542,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IClaimTopicsRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1578,
        "linearizedBaseContracts": [
          1578
        ],
        "name": "IClaimTopicsRegistry",
        "nameLocation": "71:20:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1543,
              "nodeType": "StructuredDocumentation",
              "src": "99:245:10",
              "text": "  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n  the event is emitted by the 'addClaimTopic' function\n  `claimTopic` is the required claim added to the Claim Topics Registry"
            },
            "eventSelector": "01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6",
            "id": 1547,
            "name": "ClaimTopicAdded",
            "nameLocation": "356:15:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1545,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimTopic",
                  "nameLocation": "388:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "372:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "371:28:10"
            },
            "src": "350:50:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1548,
              "nodeType": "StructuredDocumentation",
              "src": "408:256:10",
              "text": "  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n  the event is emitted by the 'removeClaimTopic' function\n  `claimTopic` is the required claim removed from the Claim Topics Registry"
            },
            "eventSelector": "0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5",
            "id": 1552,
            "name": "ClaimTopicRemoved",
            "nameLocation": "676:17:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1550,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimTopic",
                  "nameLocation": "710:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1552,
                  "src": "694:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:28:10"
            },
            "src": "670:52:10"
          },
          {
            "documentation": {
              "id": 1553,
              "nodeType": "StructuredDocumentation",
              "src": "730:196:10",
              "text": " @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n Only owner can call.\n emits `ClaimTopicAdded` event\n @param _claimTopic The claim topic index"
            },
            "functionSelector": "c7b22551",
            "id": 1558,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addClaimTopic",
            "nameLocation": "941:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "_claimTopic",
                  "nameLocation": "963:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "955:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:21:10"
            },
            "returnParameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:0:10"
            },
            "scope": 1578,
            "src": "932:53:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1559,
              "nodeType": "StructuredDocumentation",
              "src": "993:205:10",
              "text": "  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n  Only owner can call.\n  emits `ClaimTopicRemoved` event\n  @param _claimTopic The claim topic index"
            },
            "functionSelector": "08297846",
            "id": 1564,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeClaimTopic",
            "nameLocation": "1213:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1561,
                  "mutability": "mutable",
                  "name": "_claimTopic",
                  "nameLocation": "1238:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "1230:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1229:21:10"
            },
            "returnParameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:0:10"
            },
            "scope": 1578,
            "src": "1204:56:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1565,
              "nodeType": "StructuredDocumentation",
              "src": "1268:125:10",
              "text": "  @dev Get the trusted claim topics for the security token\n  @return Array of trusted claim topics"
            },
            "functionSelector": "df09d604",
            "id": 1571,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimTopics",
            "nameLocation": "1408:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:10"
            },
            "returnParameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "1448:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1567,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1448:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1568,
                    "nodeType": "ArrayTypeName",
                    "src": "1448:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:18:10"
            },
            "scope": 1578,
            "src": "1399:67:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1572,
              "nodeType": "StructuredDocumentation",
              "src": "1474:169:10",
              "text": "  @dev Transfers the Ownership of ClaimTopics to a new Owner.\n  Only owner can call.\n  @param _newOwner The new owner of this contract."
            },
            "functionSelector": "d5144472",
            "id": 1577,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipOnClaimTopicsRegistryContract",
            "nameLocation": "1658:46:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1723:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1715:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1704:35:10"
            },
            "returnParameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1748:0:10"
            },
            "scope": 1578,
            "src": "1649:100:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1579,
        "src": "61:1691:10",
        "usedErrors": []
      }
    ],
    "src": "33:1721:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-11-09T17:24:29.702Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addClaimTopic(uint256)": {
        "details": "Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event",
        "params": {
          "_claimTopic": "The claim topic index"
        }
      },
      "getClaimTopics()": {
        "details": "Get the trusted claim topics for the security token",
        "returns": {
          "_0": "Array of trusted claim topics"
        }
      },
      "removeClaimTopic(uint256)": {
        "details": "Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event",
        "params": {
          "_claimTopic": "The claim topic index"
        }
      },
      "transferOwnershipOnClaimTopicsRegistryContract(address)": {
        "details": "Transfers the Ownership of ClaimTopics to a new Owner.  Only owner can call.",
        "params": {
          "_newOwner": "The new owner of this contract."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "ClaimTopicAdded(uint256)": {
        "notice": "this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry"
      },
      "ClaimTopicRemoved(uint256)": {
        "notice": "this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}