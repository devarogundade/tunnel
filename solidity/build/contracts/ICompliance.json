{
  "contractName": "ICompliance",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_agentAddress",
          "type": "address"
        }
      ],
      "name": "TokenAgentAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_agentAddress",
          "type": "address"
        }
      ],
      "name": "TokenAgentRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "TokenBound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "TokenUnbound",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agentAddress",
          "type": "address"
        }
      ],
      "name": "isTokenAgent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isTokenBound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agentAddress",
          "type": "address"
        }
      ],
      "name": "addTokenAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agentAddress",
          "type": "address"
        }
      ],
      "name": "removeTokenAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "bindToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "unbindToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "canTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "created",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "destroyed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnershipOnComplianceContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"TokenAgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"TokenAgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"addTokenAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"isTokenAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"removeTokenAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipOnComplianceContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTokenAgent(address)\":{\"details\":\"adds an agent to the list of token agents\",\"params\":{\"_agentAddress\":\"address of the agent to be added  Emits a TokenAgentAdded event\"}},\"bindToken(address)\":{\"details\":\"binds a token to the compliance contract\",\"params\":{\"_token\":\"address of the token to bind  Emits a TokenBound event\"}},\"canTransfer(address,address,uint256)\":{\"details\":\"checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"created(address,uint256)\":{\"details\":\"function called whenever tokens are created  on a wallet  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_to\":\"The address of the receiver\"}},\"destroyed(address,uint256)\":{\"details\":\"function called whenever tokens are destroyed  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the receiver\"}},\"isTokenAgent(address)\":{\"details\":\"Returns true if the Address is in the list of token agents\",\"params\":{\"_agentAddress\":\"address of this agent\"}},\"isTokenBound(address)\":{\"details\":\"Returns true if the address given corresponds to a token that is bound with the Compliance contract\",\"params\":{\"_token\":\"address of the token\"}},\"removeTokenAgent(address)\":{\"details\":\"remove Agent from the list of token agents\",\"params\":{\"_agentAddress\":\"address of the agent to be removed (must be added first)  Emits a TokenAgentRemoved event\"}},\"transferOwnershipOnComplianceContract(address)\":{\"details\":\"function used to transfer the ownership of the compliance contract  to a new owner, giving him access to the `OnlyOwner` functions implemented on the contract\",\"params\":{\"newOwner\":\"The address of the new owner of the compliance contract  This function can only be called by the owner of the compliance contract  emits an `OwnershipTransferred` event\"}},\"transferred(address,address,uint256)\":{\"details\":\"function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"unbindToken(address)\":{\"details\":\"unbinds a token from the compliance contract\",\"params\":{\"_token\":\"address of the token to unbind  Emits a TokenUnbound event\"}}},\"version\":1},\"userdoc\":{\"events\":{\"TokenAgentAdded(address)\":{\"notice\":\"this event is emitted when the Agent has been added on the allowedList of this Compliance.  the event is emitted by the Compliance constructor and by the addTokenAgent function  `_agentAddress` is the address of the Agent to add\"},\"TokenAgentRemoved(address)\":{\"notice\":\"this event is emitted when the Agent has been removed from the agent list of this Compliance.  the event is emitted by the Compliance constructor and by the removeTokenAgent function  `_agentAddress` is the address of the Agent to remove\"},\"TokenBound(address)\":{\"notice\":\"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind\"},\"TokenUnbound(address)\":{\"notice\":\"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/ICompliance.sol\":\"ICompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/ICompliance.sol\":{\"keccak256\":\"0x1d273668b42cc3ccd3fbb6552fba12debeb0f02e630d5e549825813bf5bad19c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d46fdbf65b304410a66db93daf4d4bae2f174f1e4be795afa5463edb418ceb10\",\"dweb:/ipfs/Qma8aUirX6cHCk2WbLG7DJbbvkSvqPeVJyw3G7Sc4GYj8Q\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface ICompliance {\r\n    /**\r\n     *  this event is emitted when the Agent has been added on the allowedList of this Compliance.\r\n     *  the event is emitted by the Compliance constructor and by the addTokenAgent function\r\n     *  `_agentAddress` is the address of the Agent to add\r\n     */\r\n    event TokenAgentAdded(address _agentAddress);\r\n\r\n    /**\r\n     *  this event is emitted when the Agent has been removed from the agent list of this Compliance.\r\n     *  the event is emitted by the Compliance constructor and by the removeTokenAgent function\r\n     *  `_agentAddress` is the address of the Agent to remove\r\n     */\r\n    event TokenAgentRemoved(address _agentAddress);\r\n\r\n    /**\r\n     *  this event is emitted when a token has been bound to the compliance contract\r\n     *  the event is emitted by the bindToken function\r\n     *  `_token` is the address of the token to bind\r\n     */\r\n    event TokenBound(address _token);\r\n\r\n    /**\r\n     *  this event is emitted when a token has been unbound from the compliance contract\r\n     *  the event is emitted by the unbindToken function\r\n     *  `_token` is the address of the token to unbind\r\n     */\r\n    event TokenUnbound(address _token);\r\n\r\n    /**\r\n     *  @dev Returns true if the Address is in the list of token agents\r\n     *  @param _agentAddress address of this agent\r\n     */\r\n    function isTokenAgent(address _agentAddress) external view returns (bool);\r\n\r\n    /**\r\n     *  @dev Returns true if the address given corresponds to a token that is bound with the Compliance contract\r\n     *  @param _token address of the token\r\n     */\r\n    function isTokenBound(address _token) external view returns (bool);\r\n\r\n    /**\r\n     *  @dev adds an agent to the list of token agents\r\n     *  @param _agentAddress address of the agent to be added\r\n     *  Emits a TokenAgentAdded event\r\n     */\r\n    function addTokenAgent(address _agentAddress) external;\r\n\r\n    /**\r\n     *  @dev remove Agent from the list of token agents\r\n     *  @param _agentAddress address of the agent to be removed (must be added first)\r\n     *  Emits a TokenAgentRemoved event\r\n     */\r\n    function removeTokenAgent(address _agentAddress) external;\r\n\r\n    /**\r\n     *  @dev binds a token to the compliance contract\r\n     *  @param _token address of the token to bind\r\n     *  Emits a TokenBound event\r\n     */\r\n    function bindToken(address _token) external;\r\n\r\n    /**\r\n     *  @dev unbinds a token from the compliance contract\r\n     *  @param _token address of the token to unbind\r\n     *  Emits a TokenUnbound event\r\n     */\r\n    function unbindToken(address _token) external;\r\n\r\n    /**\r\n     *  @dev checks that the transfer is compliant.\r\n     *  default compliance always returns true\r\n     *  READ ONLY FUNCTION, this function cannot be used to increment\r\n     *  counters, emit events, ...\r\n     *  @param _from The address of the sender\r\n     *  @param _to The address of the receiver\r\n     *  @param _amount The amount of tokens involved in the transfer\r\n     */\r\n    function canTransfer(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external view returns (bool);\r\n\r\n    /**\r\n     *  @dev function called whenever tokens are transferred\r\n     *  from one wallet to another\r\n     *  this function can update state variables in the compliance contract\r\n     *  these state variables being used by `canTransfer` to decide if a transfer\r\n     *  is compliant or not depending on the values stored in these state variables and on\r\n     *  the parameters of the compliance smart contract\r\n     *  @param _from The address of the sender\r\n     *  @param _to The address of the receiver\r\n     *  @param _amount The amount of tokens involved in the transfer\r\n     */\r\n    function transferred(address _from, address _to, uint256 _amount) external;\r\n\r\n    /**\r\n     *  @dev function called whenever tokens are created\r\n     *  on a wallet\r\n     *  this function can update state variables in the compliance contract\r\n     *  these state variables being used by `canTransfer` to decide if a transfer\r\n     *  is compliant or not depending on the values stored in these state variables and on\r\n     *  the parameters of the compliance smart contract\r\n     *  @param _to The address of the receiver\r\n     *  @param _amount The amount of tokens involved in the transfer\r\n     */\r\n    function created(address _to, uint256 _amount) external;\r\n\r\n    /**\r\n     *  @dev function called whenever tokens are destroyed\r\n     *  this function can update state variables in the compliance contract\r\n     *  these state variables being used by `canTransfer` to decide if a transfer\r\n     *  is compliant or not depending on the values stored in these state variables and on\r\n     *  the parameters of the compliance smart contract\r\n     *  @param _from The address of the receiver\r\n     *  @param _amount The amount of tokens involved in the transfer\r\n     */\r\n    function destroyed(address _from, uint256 _amount) external;\r\n\r\n    /**\r\n     *  @dev function used to transfer the ownership of the compliance contract\r\n     *  to a new owner, giving him access to the `OnlyOwner` functions implemented on the contract\r\n     *  @param newOwner The address of the new owner of the compliance contract\r\n     *  This function can only be called by the owner of the compliance contract\r\n     *  emits an `OwnershipTransferred` event\r\n     */\r\n    function transferOwnershipOnComplianceContract(address newOwner) external;\r\n}\r\n",
  "sourcePath": "C:\\Users\\DELL\\Documents\\tunnel\\solidity\\contracts\\interfaces\\ICompliance.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/ICompliance.sol",
    "exportedSymbols": {
      "ICompliance": [
        891
      ]
    },
    "id": 892,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 786,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICompliance",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 891,
        "linearizedBaseContracts": [
          891
        ],
        "name": "ICompliance",
        "nameLocation": "71:11:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 787,
              "nodeType": "StructuredDocumentation",
              "src": "90:266:8",
              "text": "  this event is emitted when the Agent has been added on the allowedList of this Compliance.\n  the event is emitted by the Compliance constructor and by the addTokenAgent function\n  `_agentAddress` is the address of the Agent to add"
            },
            "eventSelector": "d62c45e13ac30396aceb3ad37c89bd1ba9048032fe61679000e92eb93dbfd67d",
            "id": 791,
            "name": "TokenAgentAdded",
            "nameLocation": "368:15:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_agentAddress",
                  "nameLocation": "392:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 791,
                  "src": "384:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "383:23:8"
            },
            "src": "362:45:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 792,
              "nodeType": "StructuredDocumentation",
              "src": "415:275:8",
              "text": "  this event is emitted when the Agent has been removed from the agent list of this Compliance.\n  the event is emitted by the Compliance constructor and by the removeTokenAgent function\n  `_agentAddress` is the address of the Agent to remove"
            },
            "eventSelector": "6a659bb87bb23efbdc295f8eed8ae8c4379bfb77660ced2ef0f3d7d26b05c6a6",
            "id": 796,
            "name": "TokenAgentRemoved",
            "nameLocation": "702:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_agentAddress",
                  "nameLocation": "728:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "720:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "719:23:8"
            },
            "src": "696:47:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 797,
              "nodeType": "StructuredDocumentation",
              "src": "751:208:8",
              "text": "  this event is emitted when a token has been bound to the compliance contract\n  the event is emitted by the bindToken function\n  `_token` is the address of the token to bind"
            },
            "eventSelector": "2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b",
            "id": 801,
            "name": "TokenBound",
            "nameLocation": "971:10:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "990:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "982:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:16:8"
            },
            "src": "965:33:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 802,
              "nodeType": "StructuredDocumentation",
              "src": "1006:216:8",
              "text": "  this event is emitted when a token has been unbound from the compliance contract\n  the event is emitted by the unbindToken function\n  `_token` is the address of the token to unbind"
            },
            "eventSelector": "28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a",
            "id": 806,
            "name": "TokenUnbound",
            "nameLocation": "1234:12:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1255:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "1247:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:16:8"
            },
            "src": "1228:35:8"
          },
          {
            "documentation": {
              "id": 807,
              "nodeType": "StructuredDocumentation",
              "src": "1271:137:8",
              "text": "  @dev Returns true if the Address is in the list of token agents\n  @param _agentAddress address of this agent"
            },
            "functionSelector": "346531fa",
            "id": 814,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenAgent",
            "nameLocation": "1423:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "_agentAddress",
                  "nameLocation": "1444:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "1436:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1435:23:8"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "1482:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:6:8"
            },
            "scope": 891,
            "src": "1414:74:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 815,
              "nodeType": "StructuredDocumentation",
              "src": "1496:170:8",
              "text": "  @dev Returns true if the address given corresponds to a token that is bound with the Compliance contract\n  @param _token address of the token"
            },
            "functionSelector": "993e8b95",
            "id": 822,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenBound",
            "nameLocation": "1681:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1702:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "1694:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1693:16:8"
            },
            "returnParameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "1733:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1732:6:8"
            },
            "scope": 891,
            "src": "1672:67:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 823,
              "nodeType": "StructuredDocumentation",
              "src": "1747:170:8",
              "text": "  @dev adds an agent to the list of token agents\n  @param _agentAddress address of the agent to be added\n  Emits a TokenAgentAdded event"
            },
            "functionSelector": "ff3e6954",
            "id": 828,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addTokenAgent",
            "nameLocation": "1932:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "_agentAddress",
                  "nameLocation": "1954:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "1946:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1945:23:8"
            },
            "returnParameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1977:0:8"
            },
            "scope": 891,
            "src": "1923:55:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 829,
              "nodeType": "StructuredDocumentation",
              "src": "1986:197:8",
              "text": "  @dev remove Agent from the list of token agents\n  @param _agentAddress address of the agent to be removed (must be added first)\n  Emits a TokenAgentRemoved event"
            },
            "functionSelector": "cdde2932",
            "id": 834,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeTokenAgent",
            "nameLocation": "2198:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "_agentAddress",
                  "nameLocation": "2223:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "2215:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2215:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2214:23:8"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2246:0:8"
            },
            "scope": 891,
            "src": "2189:58:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 835,
              "nodeType": "StructuredDocumentation",
              "src": "2255:153:8",
              "text": "  @dev binds a token to the compliance contract\n  @param _token address of the token to bind\n  Emits a TokenBound event"
            },
            "functionSelector": "3ff5aa02",
            "id": 840,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bindToken",
            "nameLocation": "2423:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2441:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "2433:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2432:16:8"
            },
            "returnParameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:8"
            },
            "scope": 891,
            "src": "2414:44:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 841,
              "nodeType": "StructuredDocumentation",
              "src": "2466:161:8",
              "text": "  @dev unbinds a token from the compliance contract\n  @param _token address of the token to unbind\n  Emits a TokenUnbound event"
            },
            "functionSelector": "40db3b50",
            "id": 846,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unbindToken",
            "nameLocation": "2642:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2662:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "2654:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2653:16:8"
            },
            "returnParameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2678:0:8"
            },
            "scope": 891,
            "src": "2633:46:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 847,
              "nodeType": "StructuredDocumentation",
              "src": "2687:386:8",
              "text": "  @dev checks that the transfer is compliant.\n  default compliance always returns true\n  READ ONLY FUNCTION, this function cannot be used to increment\n  counters, emit events, ...\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer"
            },
            "functionSelector": "e46638e6",
            "id": 858,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canTransfer",
            "nameLocation": "3088:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3118:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "3110:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3142:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "3134:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3164:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "3156:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3156:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3099:79:8"
            },
            "returnParameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "3202:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:6:8"
            },
            "scope": 891,
            "src": "3079:129:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 859,
              "nodeType": "StructuredDocumentation",
              "src": "3216:585:8",
              "text": "  @dev function called whenever tokens are transferred\n  from one wallet to another\n  this function can update state variables in the compliance contract\n  these state variables being used by `canTransfer` to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the compliance smart contract\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer"
            },
            "functionSelector": "8baf29b4",
            "id": 868,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferred",
            "nameLocation": "3816:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3836:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "3828:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3828:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3851:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "3843:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3864:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "3856:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3856:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3827:45:8"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3881:0:8"
            },
            "scope": 891,
            "src": "3807:75:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 869,
              "nodeType": "StructuredDocumentation",
              "src": "3890:518:8",
              "text": "  @dev function called whenever tokens are created\n  on a wallet\n  this function can update state variables in the compliance contract\n  these state variables being used by `canTransfer` to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the compliance smart contract\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer"
            },
            "functionSelector": "5f8dead3",
            "id": 876,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "created",
            "nameLocation": "4423:7:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4439:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "4431:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4431:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4452:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "4444:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4444:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4430:30:8"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4469:0:8"
            },
            "scope": 891,
            "src": "4414:56:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 877,
              "nodeType": "StructuredDocumentation",
              "src": "4478:501:8",
              "text": "  @dev function called whenever tokens are destroyed\n  this function can update state variables in the compliance contract\n  these state variables being used by `canTransfer` to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the compliance smart contract\n  @param _from The address of the receiver\n  @param _amount The amount of tokens involved in the transfer"
            },
            "functionSelector": "8d2ea772",
            "id": 884,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "destroyed",
            "nameLocation": "4994:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5012:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "5004:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5004:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5027:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "5019:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5019:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5003:32:8"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5044:0:8"
            },
            "scope": 891,
            "src": "4985:60:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 885,
              "nodeType": "StructuredDocumentation",
              "src": "5053:403:8",
              "text": "  @dev function used to transfer the ownership of the compliance contract\n  to a new owner, giving him access to the `OnlyOwner` functions implemented on the contract\n  @param newOwner The address of the new owner of the compliance contract\n  This function can only be called by the owner of the compliance contract\n  emits an `OwnershipTransferred` event"
            },
            "functionSelector": "7bcf0487",
            "id": 890,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipOnComplianceContract",
            "nameLocation": "5471:37:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "5517:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "5509:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5509:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5508:18:8"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5535:0:8"
            },
            "scope": 891,
            "src": "5462:74:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 892,
        "src": "61:5478:8",
        "usedErrors": []
      }
    ],
    "src": "33:5508:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-11-02T14:27:00.972Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addTokenAgent(address)": {
        "details": "adds an agent to the list of token agents",
        "params": {
          "_agentAddress": "address of the agent to be added  Emits a TokenAgentAdded event"
        }
      },
      "bindToken(address)": {
        "details": "binds a token to the compliance contract",
        "params": {
          "_token": "address of the token to bind  Emits a TokenBound event"
        }
      },
      "canTransfer(address,address,uint256)": {
        "details": "checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...",
        "params": {
          "_amount": "The amount of tokens involved in the transfer",
          "_from": "The address of the sender",
          "_to": "The address of the receiver"
        }
      },
      "created(address,uint256)": {
        "details": "function called whenever tokens are created  on a wallet  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract",
        "params": {
          "_amount": "The amount of tokens involved in the transfer",
          "_to": "The address of the receiver"
        }
      },
      "destroyed(address,uint256)": {
        "details": "function called whenever tokens are destroyed  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract",
        "params": {
          "_amount": "The amount of tokens involved in the transfer",
          "_from": "The address of the receiver"
        }
      },
      "isTokenAgent(address)": {
        "details": "Returns true if the Address is in the list of token agents",
        "params": {
          "_agentAddress": "address of this agent"
        }
      },
      "isTokenBound(address)": {
        "details": "Returns true if the address given corresponds to a token that is bound with the Compliance contract",
        "params": {
          "_token": "address of the token"
        }
      },
      "removeTokenAgent(address)": {
        "details": "remove Agent from the list of token agents",
        "params": {
          "_agentAddress": "address of the agent to be removed (must be added first)  Emits a TokenAgentRemoved event"
        }
      },
      "transferOwnershipOnComplianceContract(address)": {
        "details": "function used to transfer the ownership of the compliance contract  to a new owner, giving him access to the `OnlyOwner` functions implemented on the contract",
        "params": {
          "newOwner": "The address of the new owner of the compliance contract  This function can only be called by the owner of the compliance contract  emits an `OwnershipTransferred` event"
        }
      },
      "transferred(address,address,uint256)": {
        "details": "function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract",
        "params": {
          "_amount": "The amount of tokens involved in the transfer",
          "_from": "The address of the sender",
          "_to": "The address of the receiver"
        }
      },
      "unbindToken(address)": {
        "details": "unbinds a token from the compliance contract",
        "params": {
          "_token": "address of the token to unbind  Emits a TokenUnbound event"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokenAgentAdded(address)": {
        "notice": "this event is emitted when the Agent has been added on the allowedList of this Compliance.  the event is emitted by the Compliance constructor and by the addTokenAgent function  `_agentAddress` is the address of the Agent to add"
      },
      "TokenAgentRemoved(address)": {
        "notice": "this event is emitted when the Agent has been removed from the agent list of this Compliance.  the event is emitted by the Compliance constructor and by the removeTokenAgent function  `_agentAddress` is the address of the Agent to remove"
      },
      "TokenBound(address)": {
        "notice": "this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind"
      },
      "TokenUnbound(address)": {
        "notice": "this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}